{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs # For full documentation visit mkdocs.org . Commands # mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout # mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"api-reference/","text":"REST API # Every response will be in the following format: { \"success\": \"boolean\", \"payload\": { // Access point specific data } } The success parameter will always be present, It will also be equal to true if the request was processed succesfully. If the request failed for any reason, payload will always contain message parameter giving a short description of the error All the authorized routes(highlighted with AUTH tag) should be made with authorization header containing a valid Json-Web-Token. Some variables may be encoded in the URL path. These are represneted below as /product/:id where the colon before id( :id ) represents an string can be placed in place of id. The data type is also specified for each variable. not adhering to these types will result in Type incorrect response Note: All the URLS are preceded by /api-v1 route. Types of Error Messages and their meaning: Type Error , the type of argument is incorrect Bound Error , arguments are out of bounds Permission Error , the resource is inaccessible with current json-web-token, (responds with 403 ) Session Error , json-web-token is invalid Authentication Error , no token found General Error , api end point specific error, payload will contain description explaining the error When an error occurs, success will be false and message inside the payload will contain type of error. errorResponse.body = { \"success\": false, \"payload\": { \"message\" : \"Type of error\" } } Notes on API # 1) Any request can send Internal Error (CODE) , where CODE refers to an internal error code for debugging purposes only 1) Any request that might return 0 documents will still contain success=true 1) Any request that does not adhere to the given specification bellow results in status code:400 , successful requests have either of the following status codes: 200 , 201 , 202","title":"Guide"},{"location":"api-reference/#rest-api","text":"Every response will be in the following format: { \"success\": \"boolean\", \"payload\": { // Access point specific data } } The success parameter will always be present, It will also be equal to true if the request was processed succesfully. If the request failed for any reason, payload will always contain message parameter giving a short description of the error All the authorized routes(highlighted with AUTH tag) should be made with authorization header containing a valid Json-Web-Token. Some variables may be encoded in the URL path. These are represneted below as /product/:id where the colon before id( :id ) represents an string can be placed in place of id. The data type is also specified for each variable. not adhering to these types will result in Type incorrect response Note: All the URLS are preceded by /api-v1 route. Types of Error Messages and their meaning: Type Error , the type of argument is incorrect Bound Error , arguments are out of bounds Permission Error , the resource is inaccessible with current json-web-token, (responds with 403 ) Session Error , json-web-token is invalid Authentication Error , no token found General Error , api end point specific error, payload will contain description explaining the error When an error occurs, success will be false and message inside the payload will contain type of error. errorResponse.body = { \"success\": false, \"payload\": { \"message\" : \"Type of error\" } }","title":"REST API"},{"location":"api-reference/#notes-on-api","text":"1) Any request can send Internal Error (CODE) , where CODE refers to an internal error code for debugging purposes only 1) Any request that might return 0 documents will still contain success=true 1) Any request that does not adhere to the given specification bellow results in status code:400 , successful requests have either of the following status codes: 200 , 201 , 202","title":"Notes on API"},{"location":"api-reference/auth/","text":"Authentication # Request to generate a json-web-token for a user, # assuming the username is unique and both details satisfy with the schema { \"URL\": \"/auth/login\", \"METHOD\" : \"POST\", \"BODY\": { \"username\": \"string\", \"password\": \"string\" } } Returns the following token if success response.body = { \"success\": \"boolean\", \"payload\": { \"token\": \"string\", \"validity\": \"number\", \"user\": { \"username\": \"string\", \"firstName\": \"string\", \"lastName\": \"string\", \"address\": \"string\", \"phone\": \"number\", \"email\": \"string in email format\", \"profilePhoto\": \"string\" } } } Returns status code: 202 if login credentials are valid Note: Bearer keyword is not present in the generated token. Make sure that authorization header conatins the Bearer keyword followed by a space and then the token Can raise: Type Error incorrect type of username or password Bound Error , username and password does not adhere to constraints General Error , for example username or password incorrect Request to register a new user # { \"URL\": \"/auth/register\", \"METHOD\": \"POST\", \"BODY\": { \"username\": \"string\", \"password\": \"string\", \"firstName\": \"string\", \"lastName\": \"string\", \"address\": \"string\", \"phone\": \"number\", \"email\": \"string in email format\", \"profilePhoto\": \"string\" } } Returns status code: 201 if registration is successful Returns success: true if the user was registered Can raise: Type Error incorrect type of any parameter Bound Error , any parameter does not adhere to constraints General Error , if the username is taken AUTH To verify if a token is valid, include it in the authorization header # { \"URL\": \"/auth/verify\", \"METHOD\" : \"GET\" } returns status code: 200 along with success: true if valid Can raise: Session Error , json-web-token is invalid Authentication Error , no token found","title":"Auth"},{"location":"api-reference/auth/#authentication","text":"","title":"Authentication"},{"location":"api-reference/auth/#request-to-generate-a-json-web-token-for-a-user","text":"assuming the username is unique and both details satisfy with the schema { \"URL\": \"/auth/login\", \"METHOD\" : \"POST\", \"BODY\": { \"username\": \"string\", \"password\": \"string\" } } Returns the following token if success response.body = { \"success\": \"boolean\", \"payload\": { \"token\": \"string\", \"validity\": \"number\", \"user\": { \"username\": \"string\", \"firstName\": \"string\", \"lastName\": \"string\", \"address\": \"string\", \"phone\": \"number\", \"email\": \"string in email format\", \"profilePhoto\": \"string\" } } } Returns status code: 202 if login credentials are valid Note: Bearer keyword is not present in the generated token. Make sure that authorization header conatins the Bearer keyword followed by a space and then the token Can raise: Type Error incorrect type of username or password Bound Error , username and password does not adhere to constraints General Error , for example username or password incorrect","title":"Request to generate a json-web-token for a user,"},{"location":"api-reference/auth/#request-to-register-a-new-user","text":"{ \"URL\": \"/auth/register\", \"METHOD\": \"POST\", \"BODY\": { \"username\": \"string\", \"password\": \"string\", \"firstName\": \"string\", \"lastName\": \"string\", \"address\": \"string\", \"phone\": \"number\", \"email\": \"string in email format\", \"profilePhoto\": \"string\" } } Returns status code: 201 if registration is successful Returns success: true if the user was registered Can raise: Type Error incorrect type of any parameter Bound Error , any parameter does not adhere to constraints General Error , if the username is taken","title":"Request to register a new user"},{"location":"api-reference/auth/#auth-to-verify-if-a-token-is-valid-include-it-in-the-authorization-header","text":"{ \"URL\": \"/auth/verify\", \"METHOD\" : \"GET\" } returns status code: 200 along with success: true if valid Can raise: Session Error , json-web-token is invalid Authentication Error , no token found","title":"AUTH To verify if a token is valid, include it in the authorization header"},{"location":"api-reference/misc/","text":"miscellaneous # returns the user's first and last name # { \"URL\": \"/misc/user/:username\", \"METHOD\" : \"GET\", \"TYPES\": { \"username\": \"string\" } } returns the first and last name as payload if success response.body= { \"success\": \"boolean\", \"payload\": { \"firstName\": \"string\" \"lastName\": \"string\" } } Can raise: Type Error , username is of incorrect type Bound Error , username does not adhere to constraints get items based on search # maxPrice is ignored if it is equal to 0 { \"URL\": \"/misc/search\", \"METHOD\" : \"POST\", \"BODY\": { \"minPrice\" : \"number\", \"maxPrice\" : \"number\", \"quantity\" : \"number\", \"search\" : \"string\" } } returns products based on search parameters response.body= { \"success\": \"boolean\", \"payload\": { { \"productId\": \"number\"; \"name\": \"string\"; \"description\": \"string\"; \"price\": \"number\"; \"images\": \"array of strings\", \"username\": \"string\" }, { \"productId\": \"number\"; \"name\": \"string\"; \"description\": \"string\"; \"price\": \"number\"; \"images\": \"array of strings\", \"username\": \"string\" }, . . . } } Can raise: Type Error , any parameter are of incorrect type Bound Error , any parameter does not adhere to constraints","title":"Misc"},{"location":"api-reference/misc/#miscellaneous","text":"","title":"miscellaneous"},{"location":"api-reference/misc/#returns-the-users-first-and-last-name","text":"{ \"URL\": \"/misc/user/:username\", \"METHOD\" : \"GET\", \"TYPES\": { \"username\": \"string\" } } returns the first and last name as payload if success response.body= { \"success\": \"boolean\", \"payload\": { \"firstName\": \"string\" \"lastName\": \"string\" } } Can raise: Type Error , username is of incorrect type Bound Error , username does not adhere to constraints","title":"returns the user's first and last name"},{"location":"api-reference/misc/#get-items-based-on-search","text":"maxPrice is ignored if it is equal to 0 { \"URL\": \"/misc/search\", \"METHOD\" : \"POST\", \"BODY\": { \"minPrice\" : \"number\", \"maxPrice\" : \"number\", \"quantity\" : \"number\", \"search\" : \"string\" } } returns products based on search parameters response.body= { \"success\": \"boolean\", \"payload\": { { \"productId\": \"number\"; \"name\": \"string\"; \"description\": \"string\"; \"price\": \"number\"; \"images\": \"array of strings\", \"username\": \"string\" }, { \"productId\": \"number\"; \"name\": \"string\"; \"description\": \"string\"; \"price\": \"number\"; \"images\": \"array of strings\", \"username\": \"string\" }, . . . } } Can raise: Type Error , any parameter are of incorrect type Bound Error , any parameter does not adhere to constraints","title":"get items based on search"},{"location":"api-reference/product/","text":"Product # Get single product by ID: # { \"URL\": \"/product/:productId\", \"METHOD\": \"GET\", \"TYPES\": { \"productId\": \"number\" } } returns all the product details as outlined by the schema, with status code: 200 Can raise: Type Error due to incorrect id Bound Error , id parameter does not adhere to constraints Get Range of products by ID # { \"URL\": \"/product/:startProductId/:endProductId\", \"METHOD\" : \"GET\", \"TYPES\": { \"startProductId\": \"number\", \"endProductId\": \"number\" } } returns multiple products, if request is valid then status code: 200 is returned Can raise: Type Error due to incorrect startId or endId Bound Error , parameters does not adhere to constraints AUTH Make a new product listing # { \"URL\": \"/product/create\", \"METHOD\": \"POST\", \"BODY\": { \"name\": \"string\", \"description\": \"string\", \"price\": \"number\", \"images\": \"array of strings\" } } returns status code: 201 and the product id of the newly created product response.body = { \"success\": \"boolean\", \"payload\": { \"productId\" : \"number\" } } the user creating the listing is the owner (which cannot be changed later) returns success if product is listed Can raise: Type Error incorrect parameter types Bound Error price is below 0 Session Error , json-web-token is invalid Authentication Error AUTH update product listing # { \"URL\": \"/product/update/:productId\", \"METHOD\": \"POST\", \"BODY\": { \"name\": \"string\", \"description\": \"string\", \"price\": \"number\", \"images\": \"array of strings\" }, \"TYPES\": { \"productId\": \"number\" } } returns success if product is updated and status code:200 Can raise: Type Error incorrect parameter types Bound Error price is below 0 Permission Error , user is not the owner of product Session Error , json-web-token is invalid Authentication Error AUTH remove product listing # { \"URL\": \"/product/remove/:productId\", \"METHOD\": \"DELETE\", \"TYPES\": { \"productId\": \"number\" } } returns success if removed Can raise: Type Error incorrect type of id Bound Error , id parameter does not adhere to constraints Permission Error , user is not the owner of product Session Error , json-web-token is invalid Authentication Error AUTH check if the user is owner of listing # { \"URL\": \"/product/owner/:productId\", \"METHOD\": \"GET\", \"TYPES\": { \"productId\": \"number\" } } Contains empty payload, as usual success is true if the authenticated user is the owner of given product id Can raise: Type Error incorrect type of id Bound Error , id parameter does not adhere to constraints Permission Error , user is not the owner of product Session Error , json-web-token is invalid Authentication Error","title":"Product"},{"location":"api-reference/product/#product","text":"","title":"Product"},{"location":"api-reference/product/#get-single-product-by-id","text":"{ \"URL\": \"/product/:productId\", \"METHOD\": \"GET\", \"TYPES\": { \"productId\": \"number\" } } returns all the product details as outlined by the schema, with status code: 200 Can raise: Type Error due to incorrect id Bound Error , id parameter does not adhere to constraints","title":"Get single product by ID:"},{"location":"api-reference/product/#get-range-of-products-by-id","text":"{ \"URL\": \"/product/:startProductId/:endProductId\", \"METHOD\" : \"GET\", \"TYPES\": { \"startProductId\": \"number\", \"endProductId\": \"number\" } } returns multiple products, if request is valid then status code: 200 is returned Can raise: Type Error due to incorrect startId or endId Bound Error , parameters does not adhere to constraints","title":"Get Range of products by ID"},{"location":"api-reference/product/#auth-make-a-new-product-listing","text":"{ \"URL\": \"/product/create\", \"METHOD\": \"POST\", \"BODY\": { \"name\": \"string\", \"description\": \"string\", \"price\": \"number\", \"images\": \"array of strings\" } } returns status code: 201 and the product id of the newly created product response.body = { \"success\": \"boolean\", \"payload\": { \"productId\" : \"number\" } } the user creating the listing is the owner (which cannot be changed later) returns success if product is listed Can raise: Type Error incorrect parameter types Bound Error price is below 0 Session Error , json-web-token is invalid Authentication Error","title":"AUTH Make a new product listing"},{"location":"api-reference/product/#auth-update-product-listing","text":"{ \"URL\": \"/product/update/:productId\", \"METHOD\": \"POST\", \"BODY\": { \"name\": \"string\", \"description\": \"string\", \"price\": \"number\", \"images\": \"array of strings\" }, \"TYPES\": { \"productId\": \"number\" } } returns success if product is updated and status code:200 Can raise: Type Error incorrect parameter types Bound Error price is below 0 Permission Error , user is not the owner of product Session Error , json-web-token is invalid Authentication Error","title":"AUTH update product listing"},{"location":"api-reference/product/#auth-remove-product-listing","text":"{ \"URL\": \"/product/remove/:productId\", \"METHOD\": \"DELETE\", \"TYPES\": { \"productId\": \"number\" } } returns success if removed Can raise: Type Error incorrect type of id Bound Error , id parameter does not adhere to constraints Permission Error , user is not the owner of product Session Error , json-web-token is invalid Authentication Error","title":"AUTH remove product listing"},{"location":"api-reference/product/#auth-check-if-the-user-is-owner-of-listing","text":"{ \"URL\": \"/product/owner/:productId\", \"METHOD\": \"GET\", \"TYPES\": { \"productId\": \"number\" } } Contains empty payload, as usual success is true if the authenticated user is the owner of given product id Can raise: Type Error incorrect type of id Bound Error , id parameter does not adhere to constraints Permission Error , user is not the owner of product Session Error , json-web-token is invalid Authentication Error","title":"AUTH check if the user is owner of listing"},{"location":"api-reference/review/","text":"Review # Return all reviews for specific product # { \"URL\": \"/review/product/:productId\", \"METHOD\" : \"GET\", \"TYPES\": { \"productId\": \"number\" } } returns all the reviews in the following format response.body = { \"success\" : \"boolean\", \"payload\" : { { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\", \"username\": \"string\" }, { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\", \"username\": \"string\" }, . . . } } Returns status code: 200 on success, otherwise 400 due to below errors Can raise: Type Error , product id is of incorrect type Bound Error , id parameter does not adhere to constraints Returns the summary of reviews for a product # { \"URL\": \"/review/product/stats/:productId\", \"METHOD\" : \"GET\", \"TYPES\": { \"productId\": \"number\" } } returns the average rating and number of reviews for the product response.body = { \"success\" : \"boolean\", \"payload\" : { \"rating\": \"number\", \"count\" : \"number\" } } returns status code: 200 if success, otherwise 400 due to below errors Can raise: Type Error , product id is of incorrect type Bound Error , id parameter does not adhere to constraints where count is the number of reviews and rating is the average rating for the product in the range [0,5] with step values of 0.5 . AUTH Return all reviews of a user # { \"URL\": \"/review/user/all\", \"METHOD\" : \"GET\" } returns all the reviews of the user in the following format response.body = { \"success\" : \"boolean\", \"payload\" : { { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\", \"productId\": \"number\" }, { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\", \"productId\": \"number\" }, . . . } } Can raise: Session Error , json-web-token is invalid Authentication Error , no token found AUTH Adds a new review # { \"URL\": \"/review/:productId\", \"METHOD\": \"POST\", \"BODY\": { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\" }, \"TYPES\": { \"productId\": \"number\" } } returns 201 if created and success is truthy Can raise: Type Error , any parameter is of incorrect type Bound Error , any parameter does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found General Error , if the product review already exists Adds the user as the owner of the review if success AUTH Updates an existing review # { \"URL\": \"/review/:productId\", \"METHOD\": \"PATCH\", \"BODY\": { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\" }, \"TYPES\": { \"productId\": \"number\" } } Can raise: Type Error , any parameter is of incorrect type Bound Error , any parameter does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found General Error , if the product review does not exists AUTH Deletes a review # { \"URL\": \"/review/:productId\", \"METHOD\": \"DELETE\", \"TYPES\": { \"productId\": \"number\" } } Can raise: Type Error , id parameter is of incorrect type Bound Error , id parameter does not adhere to constraints Authentication Error , no token found Session Error , json-web-token is invalid General Error , if the product review does not exists","title":"Review"},{"location":"api-reference/review/#review","text":"","title":"Review"},{"location":"api-reference/review/#return-all-reviews-for-specific-product","text":"{ \"URL\": \"/review/product/:productId\", \"METHOD\" : \"GET\", \"TYPES\": { \"productId\": \"number\" } } returns all the reviews in the following format response.body = { \"success\" : \"boolean\", \"payload\" : { { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\", \"username\": \"string\" }, { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\", \"username\": \"string\" }, . . . } } Returns status code: 200 on success, otherwise 400 due to below errors Can raise: Type Error , product id is of incorrect type Bound Error , id parameter does not adhere to constraints","title":"Return all reviews for specific product"},{"location":"api-reference/review/#returns-the-summary-of-reviews-for-a-product","text":"{ \"URL\": \"/review/product/stats/:productId\", \"METHOD\" : \"GET\", \"TYPES\": { \"productId\": \"number\" } } returns the average rating and number of reviews for the product response.body = { \"success\" : \"boolean\", \"payload\" : { \"rating\": \"number\", \"count\" : \"number\" } } returns status code: 200 if success, otherwise 400 due to below errors Can raise: Type Error , product id is of incorrect type Bound Error , id parameter does not adhere to constraints where count is the number of reviews and rating is the average rating for the product in the range [0,5] with step values of 0.5 .","title":"Returns the summary of reviews for a product"},{"location":"api-reference/review/#auth-return-all-reviews-of-a-user","text":"{ \"URL\": \"/review/user/all\", \"METHOD\" : \"GET\" } returns all the reviews of the user in the following format response.body = { \"success\" : \"boolean\", \"payload\" : { { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\", \"productId\": \"number\" }, { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\", \"productId\": \"number\" }, . . . } } Can raise: Session Error , json-web-token is invalid Authentication Error , no token found","title":"AUTH Return all reviews of a user"},{"location":"api-reference/review/#auth-adds-a-new-review","text":"{ \"URL\": \"/review/:productId\", \"METHOD\": \"POST\", \"BODY\": { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\" }, \"TYPES\": { \"productId\": \"number\" } } returns 201 if created and success is truthy Can raise: Type Error , any parameter is of incorrect type Bound Error , any parameter does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found General Error , if the product review already exists Adds the user as the owner of the review if success","title":"AUTH Adds a new review"},{"location":"api-reference/review/#auth-updates-an-existing-review","text":"{ \"URL\": \"/review/:productId\", \"METHOD\": \"PATCH\", \"BODY\": { \"title\": \"string\", \"description\": \"string\", \"rating\": \"number\" }, \"TYPES\": { \"productId\": \"number\" } } Can raise: Type Error , any parameter is of incorrect type Bound Error , any parameter does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found General Error , if the product review does not exists","title":"AUTH Updates an existing review"},{"location":"api-reference/review/#auth-deletes-a-review","text":"{ \"URL\": \"/review/:productId\", \"METHOD\": \"DELETE\", \"TYPES\": { \"productId\": \"number\" } } Can raise: Type Error , id parameter is of incorrect type Bound Error , id parameter does not adhere to constraints Authentication Error , no token found Session Error , json-web-token is invalid General Error , if the product review does not exists","title":"AUTH Deletes a review"},{"location":"api-reference/user/","text":"User # Note: All requests for this route require valid auth header AUTH Request to get all the product IDs along with quantity in the user's cart # { \"URL\": \"/user/cart\", \"METHOD\" : \"GET\" } returns the list of product, quantity and corresponding details response.body = { \"success\" : \"boolean\", \"payload\": { { \"productId\": \"number\", \"quantity\" : \"number\", \"name\": \"string\", \"description\": \"string\", \"price\": \"number\", \"images\": \"string[]\", \"username\": \"string\" }, { \"productId\": \"number\", \"quantity\" : \"number\", \"name\": \"string\", \"description\": \"string\", \"price\": \"number\", \"images\": \"string[]\", \"username\": \"string\" }, . . . } } Can raise: Session Error , json-web-token is invalid Authentication Error , no token found AUTH Request to find out if the user has a specific product in their cart # { \"URL\": \"/user/cart/product/:productId\", \"METHOD\" : \"GET\", \"TYPES\": { \"productId\": \"number\" } } returns the number in cart response.body= { \"success\": \"boolean\", \"payload\": { \"quantity\": \"number\" } } Can raise: Type Error , product id is of incorrect type Bound Error , id parameter does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found AUTH Request to update the count of product in a users cart # { \"URL\": \"/user/cart/product/:id\", \"METHOD\" : \"POST\", \"BODY\": { \"quantity\": \"number\" }, \"TYPES\": { \"id\": \"number\" } } payload of response is empty if succeded, gives status code: 201 Can raise: Type Error , product id or quantity is of incorrect type Bound Error , quantity is negative Session Error , json-web-token is invalid Authentication Error , no token found AUTH Request to update user details # { \"URL\": \"/user/update\", \"METHOD\": \"POST\", \"BODY\": { \"firstName\": \"string\", \"lastName\": \"string\", \"address\": \"string\", \"phone\": \"number\", \"email\": \"string in email format\", \"profilePhoto\": \"string\" } } Returns success: true if the user data was modified along with status code:200 Can raise: Type Error , any parameter is of incorrect type Bound Error , any parameter does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found AUTH Request to delete the user's account, all the relevant product listings and reviews are removed # { \"URL\": \"/user/remove\", \"METHOD\": \"DELETE\", \"BODY\": { \"password\": \"string\" } } Returns success: true if the user data was deleted and status code: 200 Can raise: Type Error , password is of incorrect type Bound Error , password does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found","title":"User"},{"location":"api-reference/user/#user","text":"Note: All requests for this route require valid auth header","title":"User"},{"location":"api-reference/user/#auth-request-to-get-all-the-product-ids-along-with-quantity-in-the-users-cart","text":"{ \"URL\": \"/user/cart\", \"METHOD\" : \"GET\" } returns the list of product, quantity and corresponding details response.body = { \"success\" : \"boolean\", \"payload\": { { \"productId\": \"number\", \"quantity\" : \"number\", \"name\": \"string\", \"description\": \"string\", \"price\": \"number\", \"images\": \"string[]\", \"username\": \"string\" }, { \"productId\": \"number\", \"quantity\" : \"number\", \"name\": \"string\", \"description\": \"string\", \"price\": \"number\", \"images\": \"string[]\", \"username\": \"string\" }, . . . } } Can raise: Session Error , json-web-token is invalid Authentication Error , no token found","title":"AUTH Request to get all the product IDs along with quantity in the user's cart"},{"location":"api-reference/user/#auth-request-to-find-out-if-the-user-has-a-specific-product-in-their-cart","text":"{ \"URL\": \"/user/cart/product/:productId\", \"METHOD\" : \"GET\", \"TYPES\": { \"productId\": \"number\" } } returns the number in cart response.body= { \"success\": \"boolean\", \"payload\": { \"quantity\": \"number\" } } Can raise: Type Error , product id is of incorrect type Bound Error , id parameter does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found","title":"AUTH Request to find out if the user has a specific product in their cart"},{"location":"api-reference/user/#auth-request-to-update-the-count-of-product-in-a-users-cart","text":"{ \"URL\": \"/user/cart/product/:id\", \"METHOD\" : \"POST\", \"BODY\": { \"quantity\": \"number\" }, \"TYPES\": { \"id\": \"number\" } } payload of response is empty if succeded, gives status code: 201 Can raise: Type Error , product id or quantity is of incorrect type Bound Error , quantity is negative Session Error , json-web-token is invalid Authentication Error , no token found","title":"AUTH Request to update the count of product in a users cart"},{"location":"api-reference/user/#auth-request-to-update-user-details","text":"{ \"URL\": \"/user/update\", \"METHOD\": \"POST\", \"BODY\": { \"firstName\": \"string\", \"lastName\": \"string\", \"address\": \"string\", \"phone\": \"number\", \"email\": \"string in email format\", \"profilePhoto\": \"string\" } } Returns success: true if the user data was modified along with status code:200 Can raise: Type Error , any parameter is of incorrect type Bound Error , any parameter does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found","title":"AUTH Request to update user details"},{"location":"api-reference/user/#auth-request-to-delete-the-users-account-all-the-relevant-product-listings-and-reviews-are-removed","text":"{ \"URL\": \"/user/remove\", \"METHOD\": \"DELETE\", \"BODY\": { \"password\": \"string\" } } Returns success: true if the user data was deleted and status code: 200 Can raise: Type Error , password is of incorrect type Bound Error , password does not adhere to constraints Session Error , json-web-token is invalid Authentication Error , no token found","title":"AUTH Request to delete the user's account, all the relevant product listings and reviews are removed"},{"location":"schema/database/","text":"Database Schema # Constraints # Valid Characters for username include: const validChars = /^[a-zA-Z0-9()_\\-.!@#$%^&\\*]*$/ Valid Characters for more general cases such as descriptions include: const validChars = /^[a-zA-Z0-9()_\\-,. !@#$%^&\\*]*$/ Number of characters allowed in each string are specified as follows (tiny) firstName,LastName => [1-25] (short) username => [5-25] (medium) name (product), title (review), password => [8-25] (long) address ,description (product), description (review) => [10-500] Special Types email url search string => chars allowed [0-50] All the ids such as username , productId are integers starting from 0 and going above phoneNumber is anywhere from 9 to 12 digits, so [0-9] only rating is number from 0 to 5 with a step value of 0.5. Example: 0, 2, 5, 0.5, 3.5 Model # User # interface User { username:string, hash:string, firstName: string, lastName: string, address: string, phone: number, email: string, profilePhoto: string } CartItem # interface CartItem { username: string, productId: number, quantity: number } Product # interface Product { productId: number; name: string; description: string; price: number; images: string[], username: string } Review # interface Review { title: string, description: string, rating: number, username: string, productId: number }","title":"Database"},{"location":"schema/database/#database-schema","text":"","title":"Database Schema"},{"location":"schema/database/#constraints","text":"Valid Characters for username include: const validChars = /^[a-zA-Z0-9()_\\-.!@#$%^&\\*]*$/ Valid Characters for more general cases such as descriptions include: const validChars = /^[a-zA-Z0-9()_\\-,. !@#$%^&\\*]*$/ Number of characters allowed in each string are specified as follows (tiny) firstName,LastName => [1-25] (short) username => [5-25] (medium) name (product), title (review), password => [8-25] (long) address ,description (product), description (review) => [10-500] Special Types email url search string => chars allowed [0-50] All the ids such as username , productId are integers starting from 0 and going above phoneNumber is anywhere from 9 to 12 digits, so [0-9] only rating is number from 0 to 5 with a step value of 0.5. Example: 0, 2, 5, 0.5, 3.5","title":"Constraints"},{"location":"schema/database/#model","text":"","title":"Model"},{"location":"schema/database/#user","text":"interface User { username:string, hash:string, firstName: string, lastName: string, address: string, phone: number, email: string, profilePhoto: string }","title":"User"},{"location":"schema/database/#cartitem","text":"interface CartItem { username: string, productId: number, quantity: number }","title":"CartItem"},{"location":"schema/database/#product","text":"interface Product { productId: number; name: string; description: string; price: number; images: string[], username: string }","title":"Product"},{"location":"schema/database/#review","text":"interface Review { title: string, description: string, rating: number, username: string, productId: number }","title":"Review"}]}