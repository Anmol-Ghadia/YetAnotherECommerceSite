{
	"info": {
		"_postman_id": "7ccae99f-2bd6-4184-a60e-61f99060e0b8",
		"name": "E-Commerce API tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36386726"
	},
	"item": [
		{
			"name": "/product",
			"item": [
				{
					"name": "/:id/:id Product Range",
					"item": [
						{
							"name": "Correct",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/0/5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"0",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/aab/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"aab",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/0/ab",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"0",
										"ab"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/xy/ab",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"xy",
										"ab"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/-10/-5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"-10",
										"-5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/-10/0",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"-10",
										"0"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/5/-5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"5",
										"-5"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/:productId Single Product",
					"item": [
						{
							"name": "Bound Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/-5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"-5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/aab",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"aab"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/product/0",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"product",
										"0"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "/auth",
			"item": [
				{
					"name": "/login",
					"item": [
						{
							"name": "Correct",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"success check\", function () {\r",
											"    var body = pm.response.json();\r",
											"    pm.expect(body.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"token and validity check\", function () {\r",
											"    const payload = pm.response.json().payload;\r",
											"    pm.expect(payload.token).to.be.an('string');\r",
											"    pm.expect(payload.validity).to.be.an('number');\r",
											"});\r",
											"\r",
											"pm.test(\"user check\", function () {\r",
											"    \r",
											"    const user = pm.response.json().payload.user;\r",
											"    pm.expect(user.username).to.be.an('string');\r",
											"    pm.expect(user.firstName).to.be.an('string');\r",
											"    pm.expect(user.lastName).to.be.an('string');\r",
											"    pm.expect(user.address).to.be.an('string');\r",
											"    pm.expect(user.phone).to.be.an('number');\r",
											"    pm.expect(user.email).to.be.an('string');\r",
											"    pm.expect(user.profilePhoto).to.be.an('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"\r",
											"pm.environment.set(\"token\", pm.response.json().payload.token);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"test_user\",\r\n    \"password\" : \"test_user_pass\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : 12,\r\n    \"password\" : true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 2",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"12wdawdw21\",\r\n    \"password\" : true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : false,\r\n    \"password\" : \"GeneralUser\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 1 (usr shrt)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"1234\",\r\n    \"password\" : \"1234567890\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 2 (pass shrt)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"1234567\",\r\n    \"password\" : \"1234567\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 3 (usr long)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"12345678901234567890123456\",\r\n    \"password\" : \"1234567890\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 4 (pass long)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"1234567\",\r\n    \"password\" : \"12345678901234567890123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Gen Error 4 user wrng",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"General Error\",\r",
											"        \"description\": \"invalid username\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"1234567\",\r\n    \"password\" : \"1234567890\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Gen Error 4 pass wrng",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"General Error\",\r",
											"        \"description\": \"invalid password\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\" : \"GeneralUser\",\r\n    \"password\" : \"1234567890\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/register",
					"item": [
						{
							"name": "Correct",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\": true,\r",
											"        \"payload\" : {}\r",
											"    };\r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"test_user\",\r\n    \"password\": \"test_user_pass\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Type Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"SomeUsername\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": \"9876512340\",\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Type Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"SomeUsername\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": 2.52,\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Type Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"SomeUsername\",\r\n    \"password\": null,\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Type Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": null,\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Type Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"SomeUsername\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": false,\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Type Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"SomeUsername\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": null\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Type Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"SomeUsername\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": false,\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Bound Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"some\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Bound Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"SomeUsername1\",\r\n    \"password\": \"pass\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Bound Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"some username\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Bound Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"someUsername\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@com\",\r\n    \"profilePhoto\": \"https://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\" : false,\r",
											"        \"payload\" : {\r",
											"            \"message\": \"Bound Error\"\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"someUsername\",\r\n    \"password\": \"SuperSafePassword!\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"address\": \"Area 51, USA\",\r\n    \"phone\": 9876512340,\r\n    \"email\": \"abc@gmail.com\",\r\n    \"profilePhoto\": \"ssh://images.pexels.com/photos/458976/pexels-photo-458976.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "/verify",
					"item": [
						{
							"name": "Correct",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":true,\r",
											"    \"payload\": {}\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/verify",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth Error",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Authentication Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/verify",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"verify"
									]
								}
							},
							"response": []
						},
						{
							"name": "Session Error",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Session Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "Bearer {{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/auth/verify",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"auth",
										"verify"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "/review",
			"item": [
				{
					"name": "All Review for a product",
					"item": [
						{
							"name": "Correct 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Test success\", function () {\r",
											"    var body = pm.response.json();\r",
											"    pm.expect(body.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Test payload\", function () {\r",
											"    var payload = pm.response.json().payload;\r",
											"    pm.expect(payload.length).to.be.eq(1);\r",
											"    pm.expect(payload[0].reviewId).to.be.a('number');\r",
											"    pm.expect(payload[0].title).to.be.a('string');\r",
											"    pm.expect(payload[0].description).to.be.a('string');\r",
											"    pm.expect(payload[0].rating).to.be.a('number');\r",
											"    pm.expect(payload[0].username).to.be.a('string');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/review/product/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"review",
										"product",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Test success\", function () {\r",
											"    var body = pm.response.json();\r",
											"    pm.expect(body.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Test payload general\", function () {\r",
											"    var payload = pm.response.json().payload;\r",
											"    pm.expect(payload.length).to.be.eq(2);\r",
											"});\r",
											"\r",
											"pm.test(\"Test payload [0]\", function () {\r",
											"    var payload = pm.response.json().payload;\r",
											"    pm.expect(payload[0].reviewId).to.be.a('number');\r",
											"    pm.expect(payload[0].title).to.be.a('string');\r",
											"    pm.expect(payload[0].description).to.be.a('string');\r",
											"    pm.expect(payload[0].rating).to.be.a('number');\r",
											"    pm.expect(payload[0].username).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Test payload [1]\", function () {\r",
											"    var payload = pm.response.json().payload;\r",
											"    pm.expect(payload[1].reviewId).to.be.a('number');\r",
											"    pm.expect(payload[1].title).to.be.a('string');\r",
											"    pm.expect(payload[1].description).to.be.a('string');\r",
											"    pm.expect(payload[1].rating).to.be.a('number');\r",
											"    pm.expect(payload[1].username).to.be.a('string');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/review/product/0",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"review",
										"product",
										"0"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/review/product/abcd",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"review",
										"product",
										"abcd"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/review/product/-5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"review",
										"product",
										"-5"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "summary",
					"item": [
						{
							"name": "Correct",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Test success\", function () {\r",
											"    var body = pm.response.json();\r",
											"    pm.expect(body.success).to.eql(true);\r",
											"});\r",
											"\r",
											"pm.test(\"Test payload\", function () {\r",
											"    var payload = pm.response.json().payload;\r",
											"    pm.expect(payload.rating).to.a('number');\r",
											"    pm.expect(payload.count).to.a('number');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/review/product/stats/0",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"review",
										"product",
										"stats",
										"0"
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/review/product/stats/abcd",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"review",
										"product",
										"stats",
										"abcd"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/review/product/stats/-5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"review",
										"product",
										"stats",
										"-5"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "/user",
			"item": [
				{
					"name": "cart",
					"item": [
						{
							"name": "Correct",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\": true,\r",
											"        \"payload\": [\r",
											"            {\r",
											"                \"productId\": 0,\r",
											"                \"quantity\": 5\r",
											"            },\r",
											"            {\r",
											"                \"productId\": 2,\r",
											"                \"quantity\": 3\r",
											"            }\r",
											"        ]\r",
											"    };\r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Session Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Session Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "Bearer {{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart"
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Authentication Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET cart/product",
					"item": [
						{
							"name": "Correct",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\": true,\r",
											"        \"payload\": {\r",
											"            \"quantity\": 3\r",
											"        }\r",
											"    };\r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "-2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Session Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Session Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "Bearer {{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Authentication Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST cart/product",
					"item": [
						{
							"name": "Correct",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body is correct\", function () {\r",
											"    const expectedBody = {\r",
											"        \"success\": true,\r",
											"        \"payload\": {}\r",
											"    };\r",
											"    pm.response.to.have.body(expectedBody);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quantity\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quantity\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "abc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Type Error 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Type Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quantity\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\": false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quantity\": -5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Bound Error 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Bound Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quantity\": 2\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "-5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Session Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Session Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "Bearer {{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quantity\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Auth Error",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const outObj = {\r",
											"    \"success\":false,\r",
											"    \"payload\": {\r",
											"        \"message\": \"Authentication Error\"\r",
											"    }\r",
											"}\r",
											"pm.test(\"Body is correct\", function () {\r",
											"    pm.response.to.have.body(outObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"quantity\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:5000/api-v1/user/cart/product/:productId",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api-v1",
										"user",
										"cart",
										"product",
										":productId"
									],
									"variable": [
										{
											"key": "productId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Run for Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"success check\", function () {\r",
							"    var body = pm.response.json();\r",
							"    pm.expect(body.success).to.eql(true);\r",
							"});\r",
							"\r",
							"pm.test(\"token and validity check\", function () {\r",
							"    const payload = pm.response.json().payload;\r",
							"    pm.expect(payload.token).to.be.an('string');\r",
							"    pm.expect(payload.validity).to.be.an('number');\r",
							"});\r",
							"\r",
							"pm.test(\"user check\", function () {\r",
							"    \r",
							"    const user = pm.response.json().payload.user;\r",
							"    pm.expect(user.username).to.be.an('string');\r",
							"    pm.expect(user.firstName).to.be.an('string');\r",
							"    pm.expect(user.lastName).to.be.an('string');\r",
							"    pm.expect(user.address).to.be.an('string');\r",
							"    pm.expect(user.phone).to.be.an('number');\r",
							"    pm.expect(user.email).to.be.an('string');\r",
							"    pm.expect(user.profilePhoto).to.be.an('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Status code\", function () {\r",
							"    pm.response.to.have.status(202);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"token\", pm.response.json().payload.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"test_user\",\r\n    \"password\" : \"test_user_pass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api-v1/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api-v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token1",
			"value": ""
		}
	]
}